#!/usr/bin/perl-w
	
 
use Tk;
use Tk::BrowseEntry;


#necessary for load pall packages
use FindBin;
use lib "$FindBin::Bin/../";
use PackagesLib;

use aliased 'Packages::InCAM::InCAM';
use aliased 'Helpers::GeneralHelper';




unless ($ENV{JOB}) {
	$jobName = shift;
#	$stepName = shift;
} else {
	$jobName = "$ENV{JOB}";
#	$stepName = "panel";
}
my $inCAM = InCAM->new();
$adjustDrill = 'vrtane';

$inCAM->INFO(units=>'mm',entity_type => 'layer',entity_path => "$jobName/o+1/d",data_type => 'NUM_TOOL');
	$pocetTool = $inCAM->{doinfo}{gNUM_TOOL}; 


	$inCAM->INFO(units=>'mm',entity_type => 'layer',entity_path => "$jobName/o+1/d",data_type => 'TOOL');
	@numVrtaku = @{$inCAM->{doinfo}{gTOOLnum}};
	@finishSize = @{$inCAM->{doinfo}{gTOOLfinish_size}};
	@type = @{$inCAM->{doinfo}{gTOOLtype}};
	@type2 = @{$inCAM->{doinfo}{gTOOLtype2}};
	@min_tools = @{$inCAM->{doinfo}{gTOOLmin_tol}};
	@max_tools = @{$inCAM->{doinfo}{gTOOLmax_tol}};
	@shape = @{$inCAM->{doinfo}{gTOOLshape}};
	
    $inCAM -> COM('tools_tab_reset');
$pocetTool -= 1;
for($countDrill = 0;$countDrill <= $pocetTool;$countDrill++) {

	
		if ($type[$countDrill] eq "plated") {
			$type[$countDrill] = "plate";
		}elsif ($type[$countDrill] eq "non_plated") {
			$type[$countDrill] = "nplate";
		}
		if ($shape[$countDrill]	eq 'hole') {
				$drill_size = $inCAM -> COM('drill_size_hook',layer=>'d',thickness=>'0',user_params=>"$adjustDrill",finish_size=>"$finishSize[$countDrill]",bit=>'Drill Des',type=>"$type[$countDrill]",min_tol=>"$min_tools[$countDrill]",max_tol=>"$max_tools[$countDrill]");
				@drill_size_bit = split /\s+/,$drill_size;
				$inCAM -> COM('tools_tab_add',num=>"$numVrtaku[$countDrill]",type=>"$type[$countDrill]",type2=>"$type2[$countDrill]",min_tol=>"$min_tools[$countDrill]",max_tol=>"$max_tools[$countDrill]",bit=>"$drill_size_bit[1]",finish_size=>"$finishSize[$countDrill]",drill_size=>"$drill_size_bit[0]");
		}

}
$inCAM -> COM('tools_set',layer=>'d',thickness=>'0',user_params=>"$adjustDrill");
